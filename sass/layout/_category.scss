@import '../helper/mixins';

.category {
    position: relative;
    background-color: black;
    padding-top: 2.5rem;
    text-align: center;
    user-select: none;
    &__title {
        @include text($font-size_category, $font-weight_category);
        user-select: none;
    }
    &__carousel-wrapper {
        position: relative;
        overflow: hidden;
        margin: 0 auto;
        padding: 2rem 0 1rem 0;
        opacity: 0.5;
        width: 90%;
        height: 370px;
    }

    &__carousel {
        position: absolute;
        width: 300%;
        left: 0px;
        display: flex;
        flex-direction: row;

        &__prev {
            @include carousel__btn;
            left:1%;
        }
        &__next {
            @include carousel__btn;
            right: 1%;
            border-radius: 3px 0 0 3px;
        }
        &__dot {
            cursor: pointer;
            height: 15px;
            width: 15px;
            margin: 0 2px;
            background-color: $color-dot-inactive;
            border-radius: 50%;
            display: inline-block;
            transition: background-color 0.6s ease;
            &.active {
                background-color: $color-brand;
            }
        }
        

    }
    &__container {
        margin: 0 0.3%;
        margin-bottom: 30px;
        height: 370px;
        background-color: $color-brand;
        user-select: none;
        &__dot {
            text-align:center;
            padding-bottom: 1.5rem;
        }
    }

    &__img {
        max-width: 100%;
        height: auto;
        user-select: none;
        object-fit: cover;
        &.enter {
            animation: _translate 0.2s cubic-bezier(0.8,-0.04, 0.35, 1.01) forwards;
        }
        &.leave {
            animation: _translate_reverse 0.2s cubic-bezier(0.8,-0.04, 0.35, 1.01) forwards;
        }
    }
}

@keyframes _translate {
    0% {
        transform: translate(0, 0);
    }
    100% {
        transform: translate($size-translate_x, -$size-translate_y);
    }
}
@keyframes _translate_reverse {
    0% {
        transform: translate($size-translate_x, -$size-translate_y);
    }
    100% {
        transform: translate(0, 0);
    }
}